const { sequelize } = require('../models');

async function checkDBSchema() {
  console.log('üîç === Ê£ÄÊü•Êï∞ÊçÆÂ∫ìÁªìÊûÑ ===\n');
  
  try {
    // ËøûÊé•Êï∞ÊçÆÂ∫ì
    await sequelize.authenticate();
    console.log('‚úÖ Êï∞ÊçÆÂ∫ìËøûÊé•ÊàêÂäü');
    
    // Ê£ÄÊü•ÊâÄÊúâË°®
    const [tables] = await sequelize.query("SELECT name FROM sqlite_master WHERE type='table'");
    console.log('\nüìä Êï∞ÊçÆÂ∫ìË°®:');
    tables.forEach(table => {
      console.log(`  - ${table.name}`);
    });
    
    // Ê£ÄÊü•Ê†∏ÂøÉÊÑèÂõæË°®ÁªìÊûÑ
    console.log('\nüéØ Ê†∏ÂøÉÊÑèÂõæË°®ÁªìÊûÑ:');
    const [coreColumns] = await sequelize.query("PRAGMA table_info(core_intents)");
    coreColumns.forEach(col => {
      console.log(`  - ${col.name}: ${col.type} (${col.notnull ? 'NOT NULL' : 'NULL'})`);
    });
    
    // Ê£ÄÊü•ÈùûÊ†∏ÂøÉÊÑèÂõæË°®ÁªìÊûÑ
    console.log('\nüí¨ ÈùûÊ†∏ÂøÉÊÑèÂõæË°®ÁªìÊûÑ:');
    const [nonCoreColumns] = await sequelize.query("PRAGMA table_info(non_core_intents)");
    nonCoreColumns.forEach(col => {
      console.log(`  - ${col.name}: ${col.type} (${col.notnull ? 'NOT NULL' : 'NULL'})`);
    });
    
    // Ê£ÄÊü•ÂõûÂ§çÊ®°ÊùøË°®ÁªìÊûÑ
    console.log('\nüìù ÂõûÂ§çÊ®°ÊùøË°®ÁªìÊûÑ:');
    const [responseColumns] = await sequelize.query("PRAGMA table_info(pre_responses)");
    responseColumns.forEach(col => {
      console.log(`  - ${col.name}: ${col.type} (${col.notnull ? 'NOT NULL' : 'NULL'})`);
    });
    
    // ÁªüËÆ°Êï∞ÊçÆ
    console.log('\nüìä Êï∞ÊçÆÁªüËÆ°:');
    const [coreCount] = await sequelize.query("SELECT COUNT(*) as count FROM core_intents");
    const [nonCoreCount] = await sequelize.query("SELECT COUNT(*) as count FROM non_core_intents");
    const [responseCount] = await sequelize.query("SELECT COUNT(*) as count FROM pre_responses");
    const [categoryCount] = await sequelize.query("SELECT COUNT(*) as count FROM intent_categories");
    
    console.log(`üéØ Ê†∏ÂøÉÊÑèÂõæ: ${coreCount[0].count} ‰∏™`);
    console.log(`üí¨ ÈùûÊ†∏ÂøÉÊÑèÂõæ: ${nonCoreCount[0].count} ‰∏™`);
    console.log(`üìù ÂõûÂ§çÊ®°Êùø: ${responseCount[0].count} ‰∏™`);
    console.log(`üìÅ ÂàÜÁ±ª: ${categoryCount[0].count} ‰∏™`);
    
  } catch (error) {
    console.error('‚ùå Ê£ÄÊü•Â§±Ë¥•:', error);
  }
}

if (require.main === module) {
  checkDBSchema()
    .then(() => {
      console.log('\n‚úÖ Ê£ÄÊü•ÂÆåÊàê');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Ê£ÄÊü•Â§±Ë¥•:', error);
      process.exit(1);
    });
}

module.exports = { checkDBSchema }; 